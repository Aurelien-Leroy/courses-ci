name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Stage 1: Build and Test (parallèle)
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      
      - name: Install dependencies
        run: npm install

      - name: Fix permissions for Jest
        run: chmod -R +x node_modules/.bin  # Fix permissions on Jest binary
      
      - name: Run tests
        run: npm test

  # Stage 2: Deploy (séquentiel, dépend du succès du job "build")
  deploy:
    runs-on: ubuntu-latest
    needs: build  # Ce job ne commencera qu'après la réussite du job "build"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Deploy to production
        run: |
          echo "Deploying to production..."
          # Exemple de commande pour déployer votre API
          # npm run deploy

  # Stage 3: Post-deploy (facultatif, exemple de job après déploiement)
  post_deploy:
    runs-on: ubuntu-latest
    needs: deploy  # Ce job ne commencera qu'après le déploiement
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run post-deploy tasks
        run: |
          echo "Running post-deploy tasks..."
          # Exemple de tâche post-déploiement, comme vérifier la disponibilité de l'API ou envoyer des notifications.